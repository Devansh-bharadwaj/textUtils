{"version":3,"sources":["element/Navbar.js","element/TextForm.js","element/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","toLowerCase","split","filter","element","prototypes","PropTypes","string","about","About","myStyle","App","setMode","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce29513e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li> */}\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/textform\">Text Form</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'Enable dark mode':'Enable light mode'}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nNavbar.prototypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"Clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = ()=> {\r\n        // console.log(\"Clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = ()=> {\r\n        // console.log(\"Clicked\");\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event)=> {\r\n        // console.log(\"onChange Clicked\" + text);\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    // setText(\"Deva\");\r\n    return (\r\n        <div className=\"container my-3\" style={{color:props.mode==='light'?'#031c35':'white'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea style={{backgroundColor:props.mode==='light'?'white':'#112339',color:props.mode==='light'?'#031c35':'white'}} className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-2\" onClick={handleUpClick}>UPPERCASE</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-2\" onClick={handleLoClick}>lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-2\" onClick={handleClearClick}>Clear</button>\r\n            <div className=\"my-3\">\r\n                <h3>Your text summary</h3><hr/>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>You will take around {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read this text</p>\r\n                <h3>Preview</h3><hr/>\r\n                <p>{text.length>0?text: \"Enter your text in textarea to preview it here.\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nexport const About = (props) => {\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: \"black\",\r\n    //     backgroundColor: \"white\"\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'rgb(22 49 75)',\r\n        backgroundColor: props.mode === 'dark'?'rgb(22 49 75)':'white'\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"container my-3\" style={myStyle}>\r\n            <h2>About us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle}data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                           <strong>Analyze your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtils gives you a way to analyze your text quickly and efficiently, be it word count, character count or approximate time to read the text. You can convert your text into Uppercase and lowercase.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                           <strong>Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari,Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './element/Navbar';\nimport TextForm from './element/TextForm';\n// import Alert from './element/Alert';\nimport { About } from './element/About';\nimport Homepage from './element/Homepage';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      document.body.style.backgroundColor = '#031c35';\n      setMode('dark');\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" about=\"About TextUtils\"/> */}\n      <Router>\n         <Navbar title=\"textUtils\" mode={mode} toggleMode={toggleMode} />\n         {/* <Alert alert=\"This is your alert\" /> */}\n        <Routes>\n            {/* <Route path=\"/\" element={<Homepage/>}/> */}\n            <Route path=\"/about\" element={<About mode={mode}/>}/>\n            <Route path=\"/textform\" element={<TextForm mode={mode} heading=\"Try TextUtils - Word Counter, Character Counter\"/>}/>\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}